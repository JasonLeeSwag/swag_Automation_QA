name: Weekly Automation Test

on:
  schedule:
    - cron: "*/30 * * * *"  # 每半小時執行一次
  workflow_dispatch:
    inputs:
      environment:
        description: '選擇環境'
        required: true
        default: 'qat'
        type: choice
        options:
        - qat
        - uat

jobs:
  run_tests:
    runs-on: ubuntu-latest
    
    env:
      ENVIRONMENT: ${{ github.event_name == 'schedule' && 'uat' || inputs.environment }}
      
    steps:
      - name: Clean Workspace
        run: rm -rf *
      
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Python Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-full python3-pip xvfb
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install \
            robotframework \
            robotframework-seleniumlibrary \
            robotframework-requests \
            robotframework-jsonlibrary \
            selenium \
            requests \
            pyyaml

      - name: Setup Chrome and ChromeDriver
        run: |
          # 安裝最新版 Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # 取得 Chrome 版本
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3)
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d '.' -f 1)
          
          # 安裝對應版本的 ChromeDriver
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
          curl -Lo chromedriver_linux64.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
          # 驗證安裝
          google-chrome --version
          chromedriver --version

      - name: Start Virtual Display
        run: |
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          echo "Starting Xvfb..."
          sleep 3
      
      - name: Run Initial Tests
        id: initial_test
        continue-on-error: true
        env:
          DISPLAY: :99
        run: |
          source venv/bin/activate
          mkdir -p results
          robot \
            -V data.yaml \
            -V country.yaml \
            -V ${ENVIRONMENT}_domain.yaml \
            -i login \
            --outputdir results \
            TestCase
      
      - name: Rerun Failed Tests
        if: steps.initial_test.outcome == 'failure'
        continue-on-error: true
        env:
          DISPLAY: :99
        run: |
          source venv/bin/activate
          mkdir -p rerun_results
          robot \
            --rerunfailed results/output.xml \
            -V data.yaml \
            -V country.yaml \
            -V ${ENVIRONMENT}_domain.yaml \
            -i login \
            --outputdir rerun_results \
            TestCase

      - name: Merge Test Results
        if: steps.initial_test.outcome == 'failure' && steps.rerun.outcome == 'success'
        env:
          DISPLAY: :99
        run: |
          source venv/bin/activate
          rebot \
            --output results/output.xml \
            --merge \
            results/output.xml \
            rerun_results/output.xml
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            results/
            rerun_results/